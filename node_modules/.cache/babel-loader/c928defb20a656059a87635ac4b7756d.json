{"ast":null,"code":"var _jsxFileName = \"/home/fernando/EjerciciosInterfacesWeb/practica5/src/components/query/infoCountry.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport './infoCountry.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Country = gql`\n  query getCountry($name :String!){\n    countries(where: {name: {eq: $name}}) {\n      continent {\n        name\n      }\n      currencies {\n        name\n      }\n      population\n      languages {\n        name\n      }\n      capital {\n        name\n        location {\n          lat\n          long\n        }\n      }\n      name\n      alpha2Code\n      \n    }\n  }\n    \n  \n`;\n\nconst InfoCountry = props => {\n  _s();\n\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(Country, {\n    variables: {\n      name: props.name\n    }\n  });\n  const [index, setIndex] = useState(-1);\n  const [dataWeather, setData] = useState();\n  useEffect(() => {\n    if (index !== -1) {\n      axios.get(\"https://api.openweathermap.org/data/2.5/weather?lat=\" + (data === null || data === void 0 ? void 0 : data.countries[index].capital.location.lat) + \"&lon=\" + (data === null || data === void 0 ? void 0 : data.countries[index].capital.location.long) + \"&appid=\" + process.env.REACT_APP_KEY).then(results => {\n        setData(results.data);\n        console.log(results.data);\n      });\n    }\n  }, [index]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container_global_country\",\n    children: [loading && /*#__PURE__*/_jsxDEV(ClipLoader, {\n      color: \"blue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }, this), data && data.countries.map((country, index_country) => {\n      if (index === index_country) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container_info_country\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"name_country no\",\n            onClick: () => {\n              setIndex(index);\n            },\n            children: country.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"args_country\",\n            children: [\"Continent: \", country.continent.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"capital\",\n            onClick: () => {\n              props.changeFilter(country.capital.name, false);\n            },\n            children: [\"Capital: \", country.capital.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"args_country\",\n            children: \"Currencies: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this), country.currencies && country.currencies.map(currencie => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"---\", currencie.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 25\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"args_country\",\n            children: \"Languages: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this), country.languages && country.languages.map(language => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"---\", language.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 25\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"args_country\",\n            children: [\"Population: \", country.population]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container_info_country\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"name_country\",\n            onClick: () => {\n              setIndex(index_country);\n            },\n            children: country.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this);\n      }\n    }), index != -1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ventana\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cerrar\",\n        onClick: () => setIndex(-1),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bandera\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://www.countryflags.io/\" + (data === null || data === void 0 ? void 0 : data.countries[index].alpha2Code) + \"/flat/64.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"datos\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data\",\n          children: [\"Continent: \", data === null || data === void 0 ? void 0 : data.countries[index].continent.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data\",\n          children: [\"Name: \", data === null || data === void 0 ? void 0 : data.countries[index].name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data\",\n          children: [\"Code: \", data === null || data === void 0 ? void 0 : data.countries[index].alpha2Code]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data\",\n          children: [\"Population: \", data === null || data === void 0 ? void 0 : data.countries[index].population]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data capital\",\n          onClick: () => {\n            props.changeFilter(data === null || data === void 0 ? void 0 : data.countries[index].capital.name, false);\n          },\n          children: [\"Capital: \", data === null || data === void 0 ? void 0 : data.countries[index].capital.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this), (data === null || data === void 0 ? void 0 : data.countries[index].languages) && data.countries[index].languages.map((language, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"data\",\n            children: [\"Language \", index, \": \", language.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 23\n          }, this);\n        }), (data === null || data === void 0 ? void 0 : data.countries[index].currencies) && data.countries[index].currencies.map((currency, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"data\",\n            children: [\"Currency \", index, \": \", currency.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 23\n          }, this);\n        }), dataWeather && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"data\",\n            children: [\"Weather description: \", dataWeather.weather[0].description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"data\",\n            children: [\"Time: \", dataWeather.main.temp - 273.15, \"\\xBAC\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InfoCountry, \"KV+crTfTClWDm9GuJDpqz28fOYg=\", false, function () {\n  return [useQuery];\n});\n\n_c = InfoCountry;\nexport default InfoCountry;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfoCountry\");","map":{"version":3,"sources":["/home/fernando/EjerciciosInterfacesWeb/practica5/src/components/query/infoCountry.tsx"],"names":["React","useState","useEffect","ClipLoader","gql","useQuery","axios","Country","InfoCountry","props","data","loading","error","variables","name","index","setIndex","dataWeather","setData","get","countries","capital","location","lat","long","process","env","REACT_APP_KEY","then","results","console","log","message","map","country","index_country","continent","changeFilter","currencies","currencie","languages","language","population","alpha2Code","currency","weather","description","main","temp"],"mappings":"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","sourcesContent":["import React, { useState, FC, useEffect } from 'react';\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { gql, useQuery } from \"@apollo/client\"\nimport './infoCountry.css'\nimport axios from 'axios';\n\n\nconst Country = gql`\n  query getCountry($name :String!){\n    countries(where: {name: {eq: $name}}) {\n      continent {\n        name\n      }\n      currencies {\n        name\n      }\n      population\n      languages {\n        name\n      }\n      capital {\n        name\n        location {\n          lat\n          long\n        }\n      }\n      name\n      alpha2Code\n      \n    }\n  }\n    \n  \n`\n\ninterface CountryProps {\n  name: string\n  changeFilter: Function,\n}\n\ninterface ICountry {\n  countries: Array<{\n    continent: {\n      name: string\n    },\n    capital: {\n      name: string,\n      location: {\n        lat: number,\n        long: number\n      }\n    },\n    currencies: Array<{\n      name: string\n    }>,\n    population: number,\n    languages: Array<{\n      name: string\n    }>,\n    name: string,\n    alpha2Code: string,\n\n  }>\n}\n\ninterface WeatherAPI {\n  coord: Coord;\n  weather: Weather[];\n  base: string;\n  main: Main;\n  visibility: number;\n  wind: Wind;\n  clouds: Clouds;\n  dt: number;\n  sys: Sys;\n  timezone: number;\n  id: number;\n  name: string;\n  cod: number;\n}\n\ninterface Clouds {\n  all: number;\n}\n\ninterface Coord {\n  lon: number;\n  lat: number;\n}\n\ninterface Main {\n  temp: number;\n  feels_like: number;\n  temp_min: number;\n  temp_max: number;\n  pressure: number;\n  humidity: number;\n}\n\ninterface Sys {\n  type: number;\n  id: number;\n  country: string;\n  sunrise: number;\n  sunset: number;\n}\n\ninterface Weather {\n  id: number;\n  main: string;\n  description: string;\n  icon: string;\n}\n\ninterface Wind {\n  speed: number;\n  deg: number;\n}\n\n\n\nconst InfoCountry: FC<CountryProps> = (props) => {\n\n  const { data, loading, error } = useQuery<ICountry>(Country, { variables: { name: props.name } })\n  const [index, setIndex] = useState<number>(-1);\n\n  const [dataWeather, setData] = useState<WeatherAPI>();\n\n  useEffect(() => {\n    if (index !== -1) {\n      axios.get(\"https://api.openweathermap.org/data/2.5/weather?lat=\" + data?.countries[index].capital.location.lat + \"&lon=\" + data?.countries[index].capital.location.long + \"&appid=\" + process.env.REACT_APP_KEY).then((results) => {\n        setData(results.data);\n        console.log(results.data);\n\n      })\n    }\n\n  }, [index]);\n\n  return (\n    <div className=\"container_global_country\">\n      {loading && <ClipLoader color=\"blue\" />}\n      {error && <div>{error.message}</div>}\n      {data && data.countries.map((country, index_country) => {\n        if (index === index_country) {\n          return (\n            <div className=\"container_info_country\" >\n              <div className=\"name_country no\" onClick={() => {\n                setIndex(index);\n\n              }}>{country.name}</div>\n              <div className=\"args_country\">Continent: {country.continent.name}</div>\n              <div className=\"capital\" onClick={() => {\n                props.changeFilter(country.capital.name, false)\n              }}>Capital: {country.capital.name}</div>\n              <div className=\"args_country\">Currencies: </div>\n              {country.currencies && country.currencies.map((currencie) => {\n                return (<div>---{currencie.name}</div>)\n              })}\n              <div className=\"args_country\">Languages: </div>\n              {country.languages && country.languages.map((language) => {\n                return (<div>---{language.name}</div>)\n              })}\n              <div className=\"args_country\">Population: {country.population}</div>\n\n            </div>\n\n          )\n        } else {\n          return (\n            <div className=\"container_info_country\" >\n              <div className=\"name_country\" onClick={() => {\n                setIndex(index_country)\n              }}>{country.name}</div>\n\n\n            </div>\n          )\n        }\n      })}\n      {index != -1 &&\n        <div className=\"ventana\">\n          <div className=\"cerrar\" onClick={() => setIndex(-1)}>X</div>\n          <div className=\"bandera\">\n            <img src={\"https://www.countryflags.io/\" + data?.countries[index].alpha2Code + \"/flat/64.png\"}></img>\n\n          </div>\n          <div className=\"datos\">\n            <div className=\"data\">Continent: {data?.countries[index].continent.name}</div>\n            <div className=\"data\">Name: {data?.countries[index].name}</div>\n            <div className=\"data\">Code: {data?.countries[index].alpha2Code}</div>\n            <div className=\"data\">Population: {data?.countries[index].population}</div>\n            <div className=\"data capital\" onClick={() => {\n              props.changeFilter(data?.countries[index].capital.name, false)\n            }}>Capital: {data?.countries[index].capital.name}</div>\n            {data?.countries[index].languages && data.countries[index].languages.map((language, index) => {\n              return (<div className=\"data\">Language {index}: {language.name}</div>)\n            })}\n            {data?.countries[index].currencies && data.countries[index].currencies.map((currency, index) => {\n              return (<div className=\"data\">Currency {index}: {currency.name}</div>)\n            })}\n            {dataWeather &&\n              <div>\n                <br />\n                <div className=\"data\">Weather description: {dataWeather.weather[0].description}</div>\n                <div className=\"data\">Time: {(dataWeather.main.temp - 273.15)}ºC</div>\n              </div>\n            }\n          </div>\n        </div>\n      }\n    </div>\n  )\n\n}\n\nexport default InfoCountry;"]},"metadata":{},"sourceType":"module"}